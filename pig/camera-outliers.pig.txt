REGISTER datafu-1.2.0.jar
define Quantile datafu.pig.stats.StreamingQuantile('0.99');

tickets = LOAD 'default.all_rlc_tickets_2012' USING org.apache.hcatalog.pig.HCatLoader();

datestamped_tickets = FOREACH tickets GENERATE 
	camera_address as camera_address, 
    SUBSTRING(timestamp, 0, 10) as issue_date, 
    ticket_id as ticket_id;

-- Count the number of tickets issued per camera, per day
tickets_by_address_date = FOREACH (GROUP datestamped_tickets BY (camera_address, issue_date)) GENERATE 
	group.camera_address as camera_address, 
    group.issue_date as issue_date, 
    COUNT(datestamped_tickets.(ticket_id)) as ticket_count;    
    
-- Determine the 99th percentile for ticket issuance per camera (not by date!)
quantiles_by_address = FOREACH (GROUP tickets_by_address_date BY (camera_address)) GENERATE
	group as camera_address, 
    Quantile(tickets_by_address_date.(ticket_count)) as ninetyfifth_quantile,
    AVG(tickets_by_address_date.(ticket_count)) as average;

-- Join the quantile and ticket count tables
tickets_quantiles = JOIN tickets_by_address_date BY camera_address, quantiles_by_address BY camera_address;

-- Eliminate all but those dates where the ticket count is greater than the 99th percentile
outliers = FILTER tickets_quantiles BY (ticket_count > ninetyfifth_quantile.($0));

results = FOREACH outliers GENERATE
	tickets_by_address_date.(camera_address), 
    tickets_by_address_date.(issue_date), 
    quantiles_by_address.(average), 
    quantiles_by_address.(ticket_count); 

DUMP results;